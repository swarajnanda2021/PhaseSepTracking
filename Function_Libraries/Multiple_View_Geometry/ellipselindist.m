function [ D , y ] = ellipselindist( C, l, typ )
%ellipselindist Ellipse midpoint to nearest point to line on levelset 
%   distance, compute this distance as a covariance between C in row and l 
%   in column space.
%       input,
%           C conic vector
%           l line

% correct input
if size(l,1)==3
    l=homc2inhc(l); % inhomogeneous line, normalized coefficients
end
if nargin < 3
    typ='matrix';
end

% camera level set conics current frame
[H,g,s]=cvec2lset(C);

% compute distance
switch typ
    case 'matrix'
        D=sqrt(cell2mat(cellfun(...
            @(H,g,s)(1-sum(l.*(H\g),1)).^2 ...
            ./(sum(l.*(H\l),1)*(g'*(H\g)-2*s)),...
            squeeze(num2cell(H,[1 2])),...
            squeeze(num2cell(g,[1 2])),...
            squeeze(num2cell(s,[1 2])),...
            'UniformOutput', false)));
    case 'vector'
        D=sqrt(cell2mat(cellfun(...
            @(H,g,s,l)(1-sum(l.*(H\g),1)).^2 ...
            ./(sum(l.*(H\l),1)*(g'*(H\g)-2*s)),...
            squeeze(num2cell(H,[1 2])),...
            squeeze(num2cell(g,[1 2])),...
            squeeze(num2cell(s,[1 2])),...
            squeeze(num2cell(l,1))',...
            'UniformOutput', false)))'; % to be checked
end

% compute closest point
if nargout>1
    switch typ
        case 'matrix'
            y=cell2mat(cellfun(...
                @(H,g)reshape(...
                -H\g-(H\l).*...
                (1-sum(l.*(H\g),1)) ...
                ./sum(l.*(H\l),1) ...
                ,1,2,[]),...
                squeeze(num2cell(H,[1 2])),...
                squeeze(num2cell(g,[1 2])),...
                'UniformOutput', false));
            y=permute(y,[2 1 3]);
        case 'vector'
            y=cell2mat(cellfun(...
                @(H,g,l)reshape(...
                -H\g-(H\l).*...
                (1-sum(l.*(H\g),1)) ...
                ./sum(l.*(H\l),1) ...
                ,1,2,[]),...
                squeeze(num2cell(H,[1 2])),...
                squeeze(num2cell(g,[1 2])),...
                squeeze(num2cell(l,1))',...
                'UniformOutput', false));
            y=permute(y,[2 1 3]); % to be checked
    end
end

end

